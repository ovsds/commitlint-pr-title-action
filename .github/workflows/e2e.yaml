name: E2E

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

env:
  CUSTOM_CONFIG: |
    "use strict";
    module.exports = {
      extends: ["@commitlint/config-conventional"],
      rules: { "type-enum": [2, "always", ["custom"]] },
    };

jobs:
  e2e-default:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        id: test-run
        uses: ./
        with:
          pr_title: "feat: add new feature"

      - name: Assert stdout
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outputs.commitlint_stdout }}
          expected: ""

      - name: Assert stderr
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outputs.commitlint_stderr }}
          expected: ""

      - name: Assert exit code
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outputs.commitlint_exit_code }}
          expected: "0"

  e2e-failure:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        id: test-run
        continue-on-error: true
        uses: ./
        with:
          pr_title: "invalid commit message"

      - name: Assert failure
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outcome }}
          expected: "failure"

      - name: Assert stdout
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outputs.commitlint_stdout }}
          expected: |
            ⧗   input: invalid commit message
            ✖   subject may not be empty [subject-empty]
            ✖   type may not be empty [type-empty]

            ✖   found 2 problems, 0 warnings
            ⓘ   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

      - name: Assert exit code
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outputs.commitlint_exit_code }}
          expected: "1"

  e2e-config:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        id: test-run
        uses: ./
        with:
          pr_title: "custom: add new feature"
          config: ${{ env.CUSTOM_CONFIG }}

  e2e-config-failure:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        id: test-run
        continue-on-error: true
        uses: ./
        with:
          pr_title: "feat: add new feature"
          config: ${{ env.CUSTOM_CONFIG }}

      - name: Assert failure
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outcome }}
          expected: "failure"

  e2e-config-file-absolute-path:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Prepare commitlint configuration file
        id: prepare-config-file
        shell: bash
        env:
          CONFIG: ${{ env.CUSTOM_CONFIG }}
        run: |
          result=$(mktemp --suffix commitlint-config.js)
          echo "$CONFIG" > $result
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Test Run
        id: test-run
        uses: ./
        with:
          pr_title: "custom: add new feature"
          config_file: ${{ steps.prepare-config-file.outputs.result }}

  e2e-config-file-relative-path:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Prepare commitlint configuration file
        id: prepare-config-file
        shell: bash
        env:
          CONFIG: ${{ env.CUSTOM_CONFIG }}
        run: |
          result=commitlint-config.js
          echo "$CONFIG" > $result
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Test Run
        id: test-run
        uses: ./
        with:
          pr_title: "custom: add new feature"
          config_file: "./${{ steps.prepare-config-file.outputs.result }}"

  e2e-config-file-failure:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Prepare commitlint configuration file
        id: prepare-config-file
        shell: bash
        env:
          CONFIG: ${{ env.CUSTOM_CONFIG }}
        run: |
          result=$(mktemp)
          echo "$CONFIG" > $result
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Test Run
        id: test-run
        continue-on-error: true
        uses: ./
        with:
          pr_title: "feat: add new feature"
          config_file: ${{ steps.prepare-config-file.outputs.result }}

      - name: Assert failure
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outcome }}
          expected: "failure"

  e2e-node-modules:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Prepare node_modules
        id: prepare-node-modules
        shell: bash
        run: |
          result=$(mktemp -d)
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Install node
        id: install-dependencies
        uses: actions/setup-node@v2
        with:
          node-version: "v20.15.1"

      - name: Install dependencies
        working-directory: ${{ steps.prepare-node-modules.outputs.result }}
        run: |
          npm install \
            @commitlint/cli@^19.5.0 \
            @commitlint/config-conventional@^19.5.0

      - name: Test Run
        id: test-run
        uses: ./
        with:
          pr_title: "feat: add new feature"
          node_modules: ${{ steps.prepare-node-modules.outputs.result }}/node_modules

  e2e-node-modules-incorrect-dependencies:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Prepare node_modules
        id: prepare-node-modules
        shell: bash
        run: |
          result=$(mktemp -d)
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Install node
        id: install-dependencies
        uses: actions/setup-node@v2
        with:
          node-version: "v20.15.1"

      - name: Test Run
        id: test-run
        continue-on-error: true
        uses: ./
        with:
          pr_title: "feat: add new feature"
          node_modules: ${{ steps.prepare-node-modules.outputs.result }}/node_modules

      - name: Assert failure
        uses: nick-fields/assert-action@v2
        with:
          actual: ${{ steps.test-run.outcome }}
          expected: "failure"

  e2e:
    runs-on: ubuntu-latest
    if: always() && !cancelled()

    needs:
      - e2e-default
      - e2e-failure
      - e2e-config
      - e2e-config-failure
      - e2e-config-file-absolute-path
      - e2e-config-file-relative-path
      - e2e-config-file-failure
      - e2e-node-modules
      - e2e-node-modules-incorrect-dependencies

    steps:
      - name: Collect Results
        uses: ovsds/collect-needs-result-action@v1
        with:
          needs_json: ${{ toJson(needs) }}
          skip_allowed: false
